# 1 - Desenvolva uma calculadora em Python que realize as quatro opera√ß√µes b√°sicas (adi√ß√£o, subtra√ß√£o, multiplica√ß√£o e divis√£o) entre dois n√∫meros. A calculadora deve ser capaz de lidar com diversos tipos de erros de entrada e opera√ß√£o. Siga as especifica√ß√µes abaixo:

# A calculadora deve solicitar ao usu√°rio que insira dois n√∫meros e uma opera√ß√£o.
# As opera√ß√µes v√°lidas s√£o: + (adi√ß√£o), - (subtra√ß√£o), * (multiplica√ß√£o) e / (divis√£o).
# O programa deve continuar solicitando entradas at√© que uma opera√ß√£o v√°lida seja conclu√≠da.
# Trate os seguintes erros:
# Entrada inv√°lida (n√£o num√©rica) para os n√∫meros
# Divis√£o por zero
# Opera√ß√£o inv√°lida
# Use try/except para capturar e tratar os erros apropriadamente.
# Ap√≥s cada erro, o programa deve informar o usu√°rio sobre o erro e solicitar nova entrada.
# Quando uma opera√ß√£o √© conclu√≠da com sucesso, exiba o resultado e encerre o programa

def calculadora():
    while True:
        try:
            num1 = float(input("Digite o primeiro n√∫mero: "))
            num2 = float(input("Digite o segundo n√∫mero: "))
            operacao = input("Escolha a opera√ß√£o (+, -, *, /): ")

            if operacao == "+":
                resultado = num1 + num2
            elif operacao == "-":
                resultado = num1 - num2
            elif operacao == "*":
                resultado = num1 * num2
            elif operacao == "/":
                if num2 == 0:
                    raise ZeroDivisionError("N√£o √© poss√≠vel dividir por zero!")
                resultado = num1 / num2
            else:
                raise ValueError("Opera√ß√£o inv√°ilda. Use apenas: +, -, *, /.")
            
            print(f"\nResultado: {resultado:.2f} ‚úÖ")
            break # Encerra o loop ap√≥s opera√ß√£o bem-sucedida

        except ValueError as ve:
            print(f"\nErro: {ve}\nTente novamente üß∏\n")
        except ZeroDivisionError as ze:
            print(f"\nErro: {ze}\nTente novamente com outro n√∫mero \n")

calculadora()
